@attribute [Microsoft.AspNetCore.Components.RouteAttribute(@TrackerSafe.App.AppConstants.PageUrlSignUp)]
@inject HttpClient Http
@inject NavigationManager navManager
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inject ILogger<SignUp> logger
<div class="col">
  <h1 class="text-center top30 mt-5">Sign Up</h1>
</div>
<div class="row justify-content-center pt-3">
  <form>
    <div class="form-group">
      <label for="username">Username</label>
      <input type="text" class="form-control" id="username" @bind-value="formData.UserName">
    </div>
    <div class="form-group">
      <label for="password">Password</label>
      <input type="password" class="form-control" id="password" @bind-value="formData.Password">
    </div>
    <div class="form-group">
      <label for="passwordConfirm">Confirm Password</label>
      <input type="password" class="form-control" id="passwordConfirm" @bind-value="formData.ConfirmPassword">
    </div>
    <div class="form-group">
      <label for="referral">Referral Code (Optional)</label>
      <input type="text" class="form-control" id="referral" @bind-value="formData.ReferralCode">
    </div>
    @if (!string.IsNullOrWhiteSpace(message))
    {
      <div class="alert alert-danger row justify-content-center" role="alert">
        @message
      </div>
    }
    @if (isSuccessful)
    {
      <div class="alert alert-success row justify-content-center" role="alert">
        You have successfully signed up!
      </div>
    }
    else
    {
      <div class="row justify-content-center">
        <div class="col-9">
          @if (isLoading)
          {
            <button class="btn btn-primary btn-block mt-5" type="button" disabled>
              <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
              Loading...
            </button>
          }
          else
          {
            <button class="btn btn-primary btn-block mt-5" type="button" @onclick="InitiateSignUp">Sign Up</button>
          }
        </div>
      </div>
      
    }
    
  </form>
</div>

@code 
{
  private SignUpUserRequest formData = new SignUpUserRequest();
  private bool isSuccessful = false;
  private string message = "";
  private bool isLoading = false;
  private async void InitiateSignUp(MouseEventArgs e)
  {
    isLoading = true;
    StateHasChanged();
    logger.LogDebug($"InitiateSignUp as {formData.UserName}");
    var result = await Http.PostApiData<SignUpUserResponse, SignUp>(navManager, logger, localStorage, $"https://trackersafe.azurewebsites.net/api/SignUpUser", formData);
    logger.LogDebug($"InitiateSignUp got result: {result.Successful} with message: {result.Message}");
    isSuccessful = result.Successful;
    message = result.Message;
    isLoading = false;
    StateHasChanged();
  }
}