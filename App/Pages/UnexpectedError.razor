@attribute [Microsoft.AspNetCore.Components.RouteAttribute(@TrackerSafe.App.AppConstants.UnexpectedError)]
@inject HttpClient Http
@inject NavigationManager navManager
@inject ILogger<UnexpectedError> logger
<NotLoggedInHeader Title="Error :("></NotLoggedInHeader>
<br /><br />
<div class="row justify-content-center">
  <div class="col-10">
    <h3 class="text-center">An Unexpected Error has Occurred.</h3>
  </div>
  <div class="col-6 text-center">
    <button class="btn btn-primary btn-block" type="button" @onclick="RedirectToLogin">Try and re-launch to see if it fixes the issue</button>
  </div>
</div>
<br /><br />
<div class="row justify-content-center">
  <div class="col-10">
    <h4 class="text-center">Still Having trouble?  Try Logout and start again...</h4>
  </div>
  <div class="col-6 text-center">
    <button class="btn btn-danger btn-block" type="button" @onclick="NavigateToLogout">Logout</button>
  </div>
</div>
@code {
  protected override async Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();
  }

  protected void RedirectToLogin()
  {
    navManager.NavigateToPage(AppConstants.PageUrlLogin, true);
  }

  private void NavigateToLogout(MouseEventArgs e)
  {
    logger.LogDebug("NavigateToLogout");
    navManager.NavigateToPage(AppConstants.PageUrlLogout);
  }

}