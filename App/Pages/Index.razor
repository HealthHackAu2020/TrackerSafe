@attribute [Microsoft.AspNetCore.Components.RouteAttribute(@TrackerSafe.App.AppConstants.PageUrlHome)]
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inject NavigationManager navManager
@inject ILogger<Index> logger

<div class="container-fluid">
  <div class="row justify-content-center">
    <h1 class="text-center top30 mt-5">Tracker Safe</h1>
  </div>
  <div class="row justify-content-center">
    <h3 class="text-center">Help stop the spread of COVID-19 while staying completely anonymous.</h3>
  </div>
  <div class="row justify-content-center">
    <h5>Your App Status:</h5>
  </div>
  <div class="row justify-content-center">
    <div class="col">
      <div class="alert alert-light text-right" role="alert">
        Web Push Notifications:
      </div>
    </div>
    <div class="col">
      @if (featurePushNotificationsEnabled)
      {
        <FeatureEnabled></FeatureEnabled>
      }
      else
      {
        <FeatureDisabled></FeatureDisabled>
      }
    </div>
    <div class="col">
      <button class="btn btn-info" type="button" @onclick="NavigateToPushNotificationsTest">Test Push Notifications</button>
    </div>
  </div>
  <div class="row justify-content-center">
    <div class="col">
      <div class="alert alert-light text-right" role="alert">
        Location:
      </div>
    </div>
    <div class="col">
      @if (featureLocationEnabled)
      {
        <FeatureEnabled></FeatureEnabled>
      }
      else
      {
        <FeatureDisabled></FeatureDisabled>
      }
    </div>
    <div class="col">
      
    </div>
  </div>
</div>

@code 
{
  private bool featurePushNotificationsEnabled = false;
  private bool featureLocationEnabled = false;
  protected override Task OnInitializedAsync()
  {
    var appState = localStorage.GetAppState();
    if (appState.PushNotificationState == AppState.FeatureState.Configured)
    {
      featurePushNotificationsEnabled = true;
    }
    if (appState.LocationState == AppState.FeatureState.Configured)
    {
      featureLocationEnabled = true;
    }
    return Task.CompletedTask;
  }
  private void NavigateToPushNotificationsTest(MouseEventArgs e)
  {
    logger.LogDebug("NavigateToPushNotificationsTest");
    navManager.NavigateToPage(AppConstants.PageUrlPushNotificationsTest);
  }
}